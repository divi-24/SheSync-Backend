{
  "info": {
    "name": "Posts API",
    "_postman_id": "posts-api-collection-id",
    "description": "API collection for testing Posts functionality in SheSync platform",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.token) {",
                  "        pm.collectionVariables.set('token', response.token);",
                  "        pm.collectionVariables.set('userId', response.user.id);",
                  "        console.log('Token saved:', response.token);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          }
        }
      ]
    },
    {
      "name": "Communities Setup",
      "item": [
        {
          "name": "Create Test Community",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data._id) {",
                  "        pm.collectionVariables.set('communityId', response.data._id);",
                  "        console.log('Community ID saved:', response.data._id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Community for Posts\",\n  \"description\": \"A test community for testing posts functionality\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/communities",
              "host": ["{{baseUrl}}"],
              "path": ["communities"]
            }
          }
        }
      ]
    },
    {
      "name": "Posts Management",
      "item": [
        {
          "name": "Create Post",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data._id) {",
                  "        pm.collectionVariables.set('postId', response.data._id);",
                  "        console.log('Post ID saved:', response.data._id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"My First Post\",\n  \"content\": \"This is a test post about menstrual health awareness. Let's discuss and share our experiences!\",\n  \"communityId\": \"{{communityId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/posts",
              "host": ["{{baseUrl}}"],
              "path": ["posts"]
            },
            "description": "Create a new post in a community"
          }
        },
        {
          "name": "Create Post without Title",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"This is a post without a title. Sometimes we just want to share thoughts quickly!\",\n  \"communityId\": \"{{communityId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/posts",
              "host": ["{{baseUrl}}"],
              "path": ["posts"]
            },
            "description": "Create a post without title (title is optional)"
          }
        },
        {
          "name": "Get All Posts",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/posts",
              "host": ["{{baseUrl}}"],
              "path": ["posts"]
            },
            "description": "Retrieve all posts from all communities"
          }
        },
        {
          "name": "Get Posts by Community",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/posts/community/{{communityId}}?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["posts", "community", "{{communityId}}"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get posts from a specific community with pagination"
          }
        },
        {
          "name": "Get Single Post",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/posts/{{postId}}",
              "host": ["{{baseUrl}}"],
              "path": ["posts", "{{postId}}"]
            },
            "description": "Get details of a specific post"
          }
        },
        {
          "name": "Update Post",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Post Title\",\n  \"content\": \"This is the updated content of my post. I added more information about menstrual health.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/posts/{{postId}}",
              "host": ["{{baseUrl}}"],
              "path": ["posts", "{{postId}}"]
            },
            "description": "Update a post (only author can update)"
          }
        },
        {
          "name": "Like Post",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/posts/{{postId}}/like",
              "host": ["{{baseUrl}}"],
              "path": ["posts", "{{postId}}", "like"]
            },
            "description": "Like or unlike a post (toggle functionality)"
          }
        },
        {
          "name": "Delete Post",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/posts/{{postId}}",
              "host": ["{{baseUrl}}"],
              "path": ["posts", "{{postId}}"]
            },
            "description": "Delete a post (only author can delete)"
          }
        }
      ]
    },
    {
      "name": "Error Testing",
      "item": [
        {
          "name": "Create Post without Auth",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Unauthorized Post\",\n  \"content\": \"This should fail\",\n  \"communityId\": \"{{communityId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/posts",
              "host": ["{{baseUrl}}"],
              "path": ["posts"]
            },
            "description": "Try to create post without authentication (should return 401)"
          }
        },
        {
          "name": "Create Post without Content",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Post without content\",\n  \"communityId\": \"{{communityId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/posts",
              "host": ["{{baseUrl}}"],
              "path": ["posts"]
            },
            "description": "Try to create post without content (should return 400)"
          }
        },
        {
          "name": "Create Post with Invalid Community",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Post with invalid community\",\n  \"content\": \"This should fail\",\n  \"communityId\": \"507f1f77bcf86cd799439011\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/posts",
              "host": ["{{baseUrl}}"],
              "path": ["posts"]
            },
            "description": "Try to create post with non-existent community (should return 404)"
          }
        },
        {
          "name": "Get Non-existent Post",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/posts/507f1f77bcf86cd799439011",
              "host": ["{{baseUrl}}"],
              "path": ["posts", "507f1f77bcf86cd799439011"]
            },
            "description": "Try to get non-existent post (should return 404)"
          }
        },
        {
          "name": "Update Post without Auth",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"Trying to update without auth\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/posts/{{postId}}",
              "host": ["{{baseUrl}}"],
              "path": ["posts", "{{postId}}"]
            },
            "description": "Try to update post without authentication (should return 401)"
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "console.log('Making request to:', pm.request.url.toString());"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": ["console.log('Response status:', pm.response.code);"]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000/api",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "communityId",
      "value": "",
      "type": "string"
    },
    {
      "key": "postId",
      "value": "",
      "type": "string"
    }
  ]
}
